name: Release
 
on:
  push:
    branches: [ master ]
    tags-ignore: [ updater ]

permissions: write-all
 
jobs:
  change-version:
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.outputstep.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install git
        run: |
          sudo apt-get update
          sudo apt-get install -y git
      - id: outputstep
        run: |
          echo "VERSION=$(git describe --tags | sed 's/-[0-9]*-.*//g')" >> "$GITHUB_OUTPUT"
      - name: Change Version for Windows
        run: |
          jq ".version = \"$(git describe --tags | sed 's/-[0-9]*-.*//g')\"" package.json > package.json.tmp && mv package.json.tmp package.json

          jq ".version = \"$(git describe --tags | sed 's/-[0-9]*-.*//g')\"" src-tauri/tauri.conf.json > src-tauri/tauri.conf.json.tmp && mv src-tauri/tauri.conf.json.tmp src-tauri/tauri.conf.json

          sed -i "s/version = \"0.0.0\"/version = \"$(git describe --tags | sed 's/-[0-9]*-.*//g')\"/g" src-tauri/Cargo.toml
          
          echo $(git describe --tags | sed 's/-[0-9]*-.*//g')

      - name: Upload Artifacts for Windows
        uses: actions/upload-artifact@v4
        with:
          name: source
          path: ./*
          include-hidden-files: true
          if-no-files-found: error
  build:
    needs: change-version
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'windows-latest'
            args: ''
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin --target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: source
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      - name: Build for Linux
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: |
          npm install pnpm -g
          pnpm install
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
